// Code generated by MockGen. DO NOT EDIT.
// Source: journal.go

// Package journal is a generated GoMock package.
package journal

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockJournalRepo is a mock of JournalRepo interface.
type MockJournalRepo struct {
	ctrl     *gomock.Controller
	recorder *MockJournalRepoMockRecorder
}

// MockJournalRepoMockRecorder is the mock recorder for MockJournalRepo.
type MockJournalRepoMockRecorder struct {
	mock *MockJournalRepo
}

// NewMockJournalRepo creates a new mock instance.
func NewMockJournalRepo(ctrl *gomock.Controller) *MockJournalRepo {
	mock := &MockJournalRepo{ctrl: ctrl}
	mock.recorder = &MockJournalRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJournalRepo) EXPECT() *MockJournalRepoMockRecorder {
	return m.recorder
}

// AddItemInRepo mocks base method.
func (m *MockJournalRepo) AddItemInRepo(r *http.Request) (*JournalItem, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddItemInRepo", r)
	ret0, _ := ret[0].(*JournalItem)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddItemInRepo indicates an expected call of AddItemInRepo.
func (mr *MockJournalRepoMockRecorder) AddItemInRepo(r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddItemInRepo", reflect.TypeOf((*MockJournalRepo)(nil).AddItemInRepo), r)
}

// CreateGrapgh mocks base method.
func (m *MockJournalRepo) CreateGrapgh() (*Graph, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateGrapgh")
	ret0, _ := ret[0].(*Graph)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateGrapgh indicates an expected call of CreateGrapgh.
func (mr *MockJournalRepoMockRecorder) CreateGrapgh() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateGrapgh", reflect.TypeOf((*MockJournalRepo)(nil).CreateGrapgh))
}
